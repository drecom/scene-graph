{"version":3,"sources":["webpack://scene-graph-cocos-animation-rt/webpack/universalModuleDefinition","webpack://scene-graph-cocos-animation-rt/webpack/bootstrap","webpack://scene-graph-cocos-animation-rt/./src/CocosAnimationRuntime.ts","webpack://scene-graph-cocos-animation-rt/./src/CocosAnimationRuntimeExtension.ts","webpack://scene-graph-cocos-animation-rt/./src/Easing.ts","webpack://scene-graph-cocos-animation-rt/./src/besier.ts","webpack://scene-graph-cocos-animation-rt/./src/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AC/EA;AAAA;AAA8E;AAa9E;;;GAGG;AACH;IAAA;IAoEA,CAAC;IAnEC;;;OAGG;IACI,oDAAoB,GAA3B,UACE,CAAa,EACb,OAA0B,EAC1B,gBAAkC,EAClC,MAAoB;QAEpB,OAAO,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,UAAU;gBAAE,OAAO;YAE7B,IAAM,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAmB,CAAC;YAE7D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;gBACpB,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;aACtB;YAED,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC;YAElD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE;gBACpC,OAAO;aACR;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/D,IAAM,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAC1D,cAAc,CAAC,OAAO,GAAG,IAAI,uEAA8B,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;aACxF;YAED,IAAI,MAAM,CAAC,iBAAiB,EAAE;gBAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/D,IAAM,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBAC1D,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1C,IAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC/B,IAAI,QAAQ,KAAK,UAAU,EAAE;4BAC3B,SAAS;yBACV;wBACD,IAAM,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC/C,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;4BACpC,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAY,CAAC;4BAEpC,0BAA0B;4BAC1B,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;yBACpB;qBACF;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,wDAAwB,GAA/B,UAAgC,aAA6B,EAAE,MAA6B;QAA7B,oCAA6B;QAC1F,IAAI,aAAa,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,eAAe,EAAE;YAC9D,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5B;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAmB,EAAE,MAAM,CAAC,CAAC;SACpF;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IACH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtFD;AAAA;AAAA;AAA8B;AACM;AAEpC,IAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAEvC,SAAS,kBAAkB,CAAC,aAAuB;IACjD,OAAO,UAAC,KAAa,IAAK,8DAAY,CAAC,aAAa,EAAE,KAAK,CAAC,EAAlC,CAAkC,CAAC;AAC/D,CAAC;AAED;;GAEG;AACH;IA8DE,wCAAY,SAA+B,EAAE,MAAsB;QA1CnE;;WAEG;QACI,QAAG,GAAW,EAAE,CAAC;QACxB;;WAEG;QACI,WAAM,GAAY,KAAK,CAAC;QAC/B;;WAEG;QACI,gBAAW,GAAW,CAAC,CAAC;QAExB,gBAAW,GAAoC,SAAS,CAAC;QA8B9D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAM,MAAM,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAgC,CAAC;QAE7D,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAE/B,IAAM,UAAU,GAAG,EAAE,CAAC;YACtB,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAM,IAAI,GAAG,8BAA8B,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC7E,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;YAED,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC9C;IACH,CAAC;IA5CD,sBAAW,+CAAG;QAHd;;WAEG;aACH;YACE,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACxB,CAAC;;;OAAA;IAED;;OAEG;IACW,+CAAgB,GAA9B,UAA+B,SAA6B;QAC1D,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,+CAAM,CAAC,MAAM,CAAC;SACtB;QAED,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,IAAI,+CAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;gBACpC,OAAO,+CAAM,CAAC,SAAS,CAAuB,CAAC;aAChD;YAED,OAAO,+CAAM,CAAC,MAAM,CAAC;SACtB;QAED,eAAe;QACf,OAAO,kBAAkB,CAAC,SAAS,CAAuB,CAAC;IAC7D,CAAC;IAwBD;;OAEG;IACI,8CAAK,GAAZ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD;;OAEG;IACI,+CAAM,GAAb;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IACD;;OAEG;IACI,8CAAK,GAAZ;QACE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAED;;;OAGG;IACK,6DAAoB,GAA5B,UAA6B,SAAuC,EAAE,WAAmB,EAAE,GAAW;QACpG,IAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEtB,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC9C,uCAAuC;YACvC,uCAAuC;YACvC,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAM,YAAY,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAElD,IAAI,YAAY,GAAG,WAAW,EAAE;gBAC9B,OAAO,CAAC,CAAC;aACV;SACF;QAED,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,EAAE;YACpD,OAAO,CAAC,CAAC,CAAC;SACX;aAAM;YACL,OAAO,SAAS,CAAC,MAAM,CAAC;SACzB;IACH,CAAC;IAED;;OAEG;IACI,+CAAM,GAAb,UAAc,EAAU;QAAxB,iBAsGC;QArGC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;SACR;QAED,IAAI,CAAC,WAAW,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAElC,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE9C,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC9G,IAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE;gBAC5B,iBAAiB,GAAG,IAAI,CAAC;gBACzB,SAAS;aACV;iBAAM,IAAI,iBAAiB,KAAK,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvD,WAAW;gBACX,SAAS;aACV;YAED,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;gBACzC,SAAS;aACV;YAED,IAAI,SAAS,UAAC;YACd,IAAI,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;YACtD,IAAI,SAAS,GAAG,GAAG,CAAC;YAEpB,aAAa;YACb,IAAI,iBAAiB,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,SAAS,GAAG,YAAY,CAAC;gBACzB,IAAI,iBAAiB,GAAG,CAAC,EAAE;oBACzB,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;iBACvD;gBAED,6BAA6B;gBAC7B,SAAS,GAAG,IAAI,CAAC,WAAW,GAAI,IAAI,CAAC,SAAiB,CAAC,QAAQ,CAAC;gBAChE,IAAI,SAAS,GAAG,GAAG,EAAE;oBACnB,iBAAiB,GAAG,IAAI,CAAC;iBAC1B;qBAAM;oBACL,SAAS,GAAG,GAAG,CAAC;iBACjB;aACF;iBAAM;gBACL,IAAM,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;gBACrG,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;gBAEnD,gEAAgE;gBAChE,SAAS;oBACP,8BAA8B;oBAC9B,CAAC,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC;wBAC1C,0EAA0E;wBAC1E;wBACE,yBAAyB;wBACzB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;4BACrE,qBAAqB,CACtB,CAAC;gBAEJ,iBAAiB,GAAG,IAAI,CAAC;aAC1B;YAED,IAAM,WAAW,GAAI,SAAS,CAAC,KAAK,CAAC;YACrC,IAAM,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC;YACxC,IAAM,SAAS,GAAM,UAAU,CAAC,iBAAiB,CAAC,CAAC;YAEnD,IAAM,MAAM,GAAsB;gBAChC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,iBAAiB,EAAE,QAAQ;gBAC3B,YAAY;gBACZ,WAAW;gBACX,SAAS;gBACT,SAAS;aACV,CAAC;YAEF,IAAM,WAAW,GAAG,8BAA8B,CAAC,qCAAqC,CAAC,MAAM,CAAC,CAAC;YAEjG,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI;gBACvB,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;oBACxB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;wBACnC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE;4BACrB,KAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;4BACxD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gCACxB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;6BAC1B;4BACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;yBAC5C;wBACD,KAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;qBACrC;yBAAM;wBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;qBACpC;iBACF;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;iBACpC;YACH,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,iBAAiB,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAEc,0EAA2C,GAA1D,UAA2D,MAAkC;QAC3F,IAAM,aAAa,GAAI,MAAM,CAAC,WAAsB,GAAI,MAAM,CAAC,YAAuB,CAAC;QACvF,IAAM,KAAK,GAAG,MAAM,CAAC,YAAY,GAAG,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAEvF,QAAQ,MAAM,CAAC,iBAAiB,EAAE;YAChC,KAAK,GAAG,CAAC,CAAC,OAAO;gBACf,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ;gBAC9B,GAAG,EAAE,MAAM,CAAC,iBAAiB;gBAC7B,KAAK,EAAE,KAAK;aACb;YACD,KAAK,GAAG,CAAC,CAAC,OAAO;gBACf,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ;gBAC9B,GAAG,EAAE,MAAM,CAAC,iBAAiB;gBAC7B,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC;aAClB;YACD,KAAK,UAAU,CAAC,CAAC,OAAO;gBACtB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,GAAG,EAAE,MAAM,CAAC,iBAAiB;gBAC7B,KAAK,EAAE,KAAK,GAAG,gBAAgB;aAChC;YACD,KAAK,SAAS,CAAC,CAAC,OAAO;gBACrB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,GAAG,EAAE,OAAO;gBACZ,KAAK,EAAE,KAAK,GAAG,GAAG;aACnB;YACD,OAAO,CAAC,CAAC,OAAO;gBACd,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,GAAG,EAAE,MAAM,CAAC,iBAAiB;gBAC7B,KAAK,EAAE,KAAK;aACb;SACF;IACH,CAAC;IAEc,0EAA2C,GAA1D,UAA2D,MAA+B;QACxF,IAAM,WAAW,GAAG,IAAI,GAAG,EAAgC,CAAC;QAE5D,IAAM,iBAAiB,GAAK,MAAM,CAAC,WAAkD,CAAC;QACtF,IAAM,kBAAkB,GAAI,MAAM,CAAC,YAAmD,CAAC;QAEvF,IAAI,MAAM,CAAC,iBAAiB,KAAK,OAAO,EAAE;YACxC,IAAM,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;gBAC3B,IAAM,iBAAiB,GAAG;oBACxB,CAAC,EAAE,kBAAkB,CAAC,CAAC,GAAG,GAAG;oBAC7B,CAAC,EAAE,kBAAkB,CAAC,CAAC,GAAG,GAAG;oBAC7B,CAAC,EAAE,kBAAkB,CAAC,CAAC,GAAG,GAAG;iBAC9B,CAAC;gBACF,IAAM,gBAAgB,GAAG;oBACvB,CAAC,EAAE,iBAAiB,CAAC,CAAC,GAAG,GAAG;oBAC5B,CAAC,EAAE,iBAAiB,CAAC,CAAC,GAAG,GAAG;oBAC5B,CAAC,EAAE,iBAAiB,CAAC,CAAC,GAAG,GAAG;iBAC7B,CAAC;gBACF,IAAM,WAAW,GAAG;oBAClB,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;oBACxE,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;oBACxE,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;iBACzE,CAAC;gBAEF,WAAW,CAAC,GAAG,CAAC;oBACd,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,GAAG,EAAE,MAAM;oBACX,KAAK,EACH,CAAC,iBAAiB,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC;wBAC7E,CAAC,iBAAiB,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC;wBAC7E,CAAC,iBAAiB,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,WAAW,CAAC,CAAC;iBACnD,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAM,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;YAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEpB,IAAM,aAAa,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;gBACvE,IAAM,KAAK,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAE3F,WAAW,CAAC,GAAG,CAAC;oBACd,MAAM,EAAG,MAAM,CAAC,MAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC;oBACxD,GAAG,EAAE,GAAG;oBACR,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;SACF;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAEc,oEAAqC,GAApD,UAAqD,MAAyB;QAC5E,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,QAAQ,EAAE;YAC3C,IAAM,cAAc,GAAG,IAAI,GAAG,EAAgC,CAAC;YAC/D,IAAM,IAAI,GAAG,8BAA8B,CAAC,2CAA2C,CAAC,MAAoC,CAAC,CAAC;YAC9H,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO,cAAc,CAAC;SACvB;QAED,OAAO,8BAA8B,CAAC,2CAA2C,CAAC,MAAiC,CAAC,CAAC;IACvH,CAAC;IACH,qCAAC;AAAD,CAAC;;AAAA,CAAC;;;;;;;;;;;;;ACvVF;AAAA;;GAEG;AACH,IAAM,MAAM,GAA4C;IACtD,MAAM,EAAE,UAAC,KAAa;QACpB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,EAAE,UAAC,KAAa;QACrB,OAAO,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC7B,CAAC;CACF;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACdtB;AAAA;AAAA,IAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;AAExB,SAAS,GAAG,CAAC,CAAS;IACpB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,OAAO,CAAC,KAAe,EAAE,KAAa;IAC7C,IAAM,EAAE,GAAG,KAAK,CAAC;IACjB,IAAM,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAM,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAM,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC;IAErB,iCAAiC;IACjC,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IACnB,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IACnB,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IACnB,IAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACjC,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;IACpC,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;IAC5B,IAAM,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAClB,2BAA2B;IAC3B,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACpD,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,kCAAkC;IAClC,IAAM,YAAY,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAE5C,yDAAyD;IACzD,iDAAiD;IACjD,IAAI,YAAY,GAAG,CAAC,EAAE;QACpB,IAAM,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACpB,IAAM,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAC7B,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,oDAAoD;QACpD,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACpB,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;QACpB,IAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QACxC,IAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAChD,IAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAEpD,yBAAyB;QACzB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;gBACtB,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACvE;iBAAM;gBACL,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aACrD;SACF;aAAM;YACL,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;gBACtB,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aACrD;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;SACF;KACF;SAAM,IAAI,YAAY,KAAK,CAAC,EAAE;QAC7B,IAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACxC,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QACvB,IAAM,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;QAEpB,yBAAyB;QACzB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;YACtB,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;SACrD;aAAM;YACL,OAAO,EAAE,CAAC;SACX;KACF;SAAM;QACL,yCAAyC;QACzC,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,OAAO,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;KAC1C;AACH,CAAC;AAEc,SAAS,YAAY,CAAC,aAAuB,EAAE,KAAa;IACzE,IAAM,OAAO,GAAG,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAI,IAAI;IACtD,mCAAmC;IACnC,qCAAqC;IACrC,qCAAqC;IACrC,mCAAmC;IACnC,IAAM,EAAE,GAAI,CAAC,GAAG,OAAO,CAAC;IACxB,OAAO,wBAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,EAAE,GAAQ,EAAE;QACtE,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,EAAE;QAC7C,SAAS,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AAC/C,CAAC;;;;;;;;;;;;;ACzFD;AAAA;AAA4D;AAG7C,6HAAqB,EAAC","file":"scene-graph-cocos-animation-rt.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scene-graph-cocos-animation-rt\"] = factory();\n\telse\n\t\troot[\"scene-graph-cocos-animation-rt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { SchemaJson, Node } from '@drecom/scene-graph-schema';\nimport { ImporterPlugin, ImportOption } from '@drecom/scene-graph-mediator-rt';\nimport Types from './interface/types';\nimport CocosAnimationRuntimeExtension from './CocosAnimationRuntimeExtension';\n\n/**\n * PIXI.js augmentation\n */\ndeclare module 'pixi.js' {\n  interface Container {\n    sgmed?: {\n      cocosAnimations?: Types.CocosAnimation[]\n    }\n  }\n}\n\n/**\n * Plugin for scene-graph-mediator-rt\n * Handles animation data desceibed in scene-graph-cocos-animation-cli in PIXI runtime\n */\nexport default class CocosAnimationRuntime implements ImporterPlugin {\n  /**\n   * Plugin interface inplementation\n   * Custom extension for runtime object\n   */\n  public extendRuntimeObjects(\n    _: SchemaJson,\n    nodeMap: Map<string, Node>,\n    runtimeObjectMap: Map<string, any>,\n    option: ImportOption\n  ): void {\n    nodeMap.forEach((node, id) => {\n      if (!node.animations) return;\n\n      const container = runtimeObjectMap.get(id) as PIXI.Container;\n\n      if (!container.sgmed) {\n        container.sgmed = {};\n      }\n\n      container.sgmed.cocosAnimations = node.animations;\n\n      if (!container.sgmed.cocosAnimations) {\n        return;\n      }\n\n      for (let i = 0; i < container.sgmed.cocosAnimations.length; i++) {\n        const cocosAnimation = container.sgmed.cocosAnimations[i];\n        cocosAnimation.runtime = new CocosAnimationRuntimeExtension(cocosAnimation, container);\n      }\n\n      if (option.autoCoordinateFix) {\n        for (let i = 0; i < container.sgmed.cocosAnimations.length; i++) {\n          const cocosAnimation = container.sgmed.cocosAnimations[i];\n          const properties = Object.keys(cocosAnimation.curves);\n          for (let j = 0; j < properties.length; j++) {\n            const property = properties[j];\n            if (property !== 'position') {\n              continue;\n            }\n            const curve = cocosAnimation.curves[property];\n            for (let k = 0; k < curve.keyFrames.length; k++) {\n              const keyFrame = curve.keyFrames[k];\n              const value = keyFrame.value as any;\n\n              // cocos coordinate system\n              value.y = -value.y;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Collect conatiners with animation\n   */\n  public filterAnimationContainer(rootContainer: PIXI.Container, vector: PIXI.Container[] = []): PIXI.Container[] {\n    if (rootContainer.sgmed && rootContainer.sgmed.cocosAnimations) {\n      vector.push(rootContainer);\n    }\n\n    for (let i = 0; i < rootContainer.children.length; i++) {\n      this.filterAnimationContainer(rootContainer.children[i] as PIXI.Container, vector);\n    }\n\n    return vector;\n  }\n}\n","import { CocosAnimationClientTypes as ClientTypes } from '@drecom/scene-graph-cocos-animation-cli';\nimport Types from './interface/types';\nimport Easing from './Easing';\nimport bezierByTime from './besier';\n\nconst DEGREE_TO_RADIAN = Math.PI / 180;\n\nfunction createBezierByTime(controlPoints: number[]) {\n  return (ratio: number) => bezierByTime(controlPoints, ratio);\n}\n\n/**\n * Cocos animation augment object for PIXI.Container.\n */\nexport default class CocosAnimationRuntimeExtension {\n  /**\n   * Cocos animation data\n   */\n  public animation!: Types.CocosAnimation;\n  /**\n   * Animation frame time described in seconds\n   * e.g) 1 frame of 60 FPS should be 0.016666...\n   */\n  public animationFrameTime!: number;\n  /**\n   * parent pixi object\n   */\n  public target!: PIXI.Container;\n  /**\n   * Applying curve functions related to properties\n   * Functions are registerd in order to key frame.\n   */\n  public curveFuncsMap!: Map<string, Types.EaseFunction[]>;\n\n  /**\n   * Application fps\n   */\n  public fps: number = 60;\n  /**\n   * Boolean to represent animation is paused\n   */\n  public paused: boolean = false;\n  /**\n   * Animation elapsed time described in seconds\n   */\n  public elapsedTime: number = 0;\n\n  public colorMatrix?: PIXI.filters.ColorMatrixFilter = undefined;\n\n  /**\n   * Seconds per frame by application fps\n   */\n  public get spf(): number {\n    return 1.0 / this.fps;\n  }\n\n  /**\n   * Get curve function by given curve type.\n   */\n  public static getCurveFunction(curveType?: string | number[]): Types.EaseFunction {\n    if (!curveType) {\n      return Easing.linear;\n    }\n\n    if (typeof curveType === 'string') {\n      if (Easing.hasOwnProperty(curveType)) {\n        return Easing[curveType] as Types.EaseFunction;\n      }\n\n      return Easing.linear;\n    }\n\n    // custom curve\n    return createBezierByTime(curveType) as Types.EaseFunction;\n  }\n\n  constructor(animation: Types.CocosAnimation, target: PIXI.Container) {\n    this.animation = animation;\n    this.target    = target;\n    this.animationFrameTime = 1.0 / this.animation.sample;\n    this.curveFuncsMap = new Map<string, Types.EaseFunction[]>();\n\n    const properties = Object.keys(this.animation.curves);\n    for (let i = 0; i < properties.length; i++) {\n      const property = properties[i];\n\n      const curveFuncs = [];\n      const curve = this.animation.curves[property];\n      for (let j = 0; j < curve.keyFrames.length; j++) {\n        const keyFrame = curve.keyFrames[j];\n        const func = CocosAnimationRuntimeExtension.getCurveFunction(keyFrame.curve);\n        curveFuncs.push(func);\n      }\n\n      this.curveFuncsMap.set(property, curveFuncs);\n    }\n  }\n\n  /**\n   * Pause animation\n   */\n  public pause(): void {\n    this.paused = true;\n  }\n  /**\n   * Resume animation\n   */\n  public resume(): void {\n    this.paused = false;\n  }\n  /**\n   * Reset animation\n   */\n  public reset(): void {\n    this.elapsedTime = 0;\n  }\n\n  /**\n   * Returns index of current key frame\n   * current key frame is calcurated by elapsed time and animation fps\n   */\n  private getCurrentFrameIndex(keyFrames: ClientTypes.AnimationFrame[], elapsedTime: number, fps: number): number {\n    const spf = 1.0 / fps;\n\n    for (let i = keyFrames.length - 1; i >= 0; i--) {\n      // 60fps: 0.1 = 6 frames, 0.016 * 6 sec\n      // 30fps: 0.1 = 3 frames, 0.033 * 3 sec\n      const keyFrame = keyFrames[i];\n      const keyFrameTime = spf * (fps * keyFrame.frame);\n\n      if (keyFrameTime < elapsedTime) {\n        return i;\n      }\n    }\n\n    if ((spf * (fps * keyFrames[0].frame)) > elapsedTime) {\n      return -1;\n    } else {\n      return keyFrames.length;\n    }\n  }\n\n  /**\n   * Update animation if possible\n   */\n  public update(dt: number): void {\n    if (this.paused) {\n      return;\n    }\n\n    this.elapsedTime += dt * this.spf;\n\n    let activeCurveExists = false;\n\n    const properties = Object.keys(this.animation.curves);\n    for (let i = 0; i < properties.length; i++) {\n      const property = properties[i];\n      const curve = this.animation.curves[property];\n\n      const currentFrameIndex = this.getCurrentFrameIndex(curve.keyFrames, this.elapsedTime, this.animation.sample);\n      if (currentFrameIndex === -1) {\n        activeCurveExists = true;\n        continue;\n      } else if (currentFrameIndex === curve.keyFrames.length) {\n        // finished\n        continue;\n      }\n\n      const curveFuncs = this.curveFuncsMap.get(property);\n      if (!curveFuncs || curveFuncs.length == 0) {\n        continue;\n      }\n\n      let nextFrame;\n      let currentFrame = curve.keyFrames[currentFrameIndex];\n      let timeRatio = 0.0;\n\n      // last frame\n      if (currentFrameIndex >= curve.keyFrames.length - 1) {\n        nextFrame = currentFrame;\n        if (currentFrameIndex > 0) {\n          currentFrame = curve.keyFrames[currentFrameIndex - 1];\n        }\n\n        // TODO: next version feature\n        timeRatio = this.elapsedTime / (this.animation as any).duration;\n        if (timeRatio < 1.0) {\n          activeCurveExists = true;\n        } else {\n          timeRatio = 1.0;\n        }\n      } else {\n        const currentKeyFrameAsTime = this.animationFrameTime * (this.animation.sample * currentFrame.frame);\n        nextFrame = curve.keyFrames[currentFrameIndex + 1];\n\n        // time_ratio = time_from_current_key_frame / time_to_next_frame\n        timeRatio =\n          // time_from_current_key_frame\n          (this.elapsedTime - currentKeyFrameAsTime) /\n          // time_to_next_frame = next_key_frame_as_time - current_key_frame_as_time\n          (\n            // next_key_frame_as_time\n            (this.animationFrameTime * (this.animation.sample * nextFrame.frame)) -\n            currentKeyFrameAsTime\n          );\n\n        activeCurveExists = true;\n      }\n\n      const targetValue  = nextFrame.value;\n      const currentValue = currentFrame.value;\n      const curveFunc    = curveFuncs[currentFrameIndex];\n\n      const params: Types.FrameParams = {\n        target: this.target,\n        animationProperty: property,\n        currentValue,\n        targetValue,\n        timeRatio,\n        curveFunc\n      };\n\n      const convertInfo = CocosAnimationRuntimeExtension.getAnimationPropertyConversionInfoSet(params);\n\n      convertInfo.forEach((item) => {\n        if (item.key === 'alpha') {\n          if (item.target.alpha === undefined) {\n            if (!this.colorMatrix) {\n              this.colorMatrix = new PIXI.filters.ColorMatrixFilter();\n              if (!item.target.filters) {\n                item.target.filters = [];\n              }\n              item.target.filters.push(this.colorMatrix);\n            }\n            this.colorMatrix.alpha = item.value;\n          } else {\n            item.target[item.key] = item.value;\n          }\n        } else {\n          item.target[item.key] = item.value;\n        }\n      });\n    }\n\n    if (!activeCurveExists) {\n      this.paused = true;\n    }\n  }\n\n  private static getPrimitiveAnimationPropertyConversionInfo(params: Types.PrimitiveFrameParams): Types.PropertyConversionInfo {\n    const valueDistance = (params.targetValue as number) - (params.currentValue as number);\n    const value = params.currentValue + valueDistance * params.curveFunc(params.timeRatio);\n\n    switch (params.animationProperty) {\n      case 'x': return {\n        target: params.target.position,\n        key: params.animationProperty,\n        value: value\n      }\n      case 'y': return {\n        target: params.target.position,\n        key: params.animationProperty,\n        value: value * -1\n      }\n      case 'rotation': return {\n        target: params.target,\n        key: params.animationProperty,\n        value: value * DEGREE_TO_RADIAN\n      }\n      case 'opacity': return {\n        target: params.target,\n        key: 'alpha',\n        value: value / 255\n      }\n      default: return {\n        target: params.target,\n        key: params.animationProperty,\n        value: value\n      }\n    }\n  }\n\n  private static getObjectAnimationPropertyConversionInfoSet(params: Types.ObjectFrameParams): Set<Types.PropertyConversionInfo> {\n    const convertInfo = new Set<Types.PropertyConversionInfo>();\n\n    const targetValueObject  = (params.targetValue as ClientTypes.AnimationFrameProperty);\n    const currentValueObject = (params.currentValue as ClientTypes.AnimationFrameProperty);\n\n    if (params.animationProperty === 'color') {\n      const curvedRatio = params.curveFunc(params.timeRatio);\n      if ('tint' in params.target) {\n        const currentColorRatio = {\n          r: currentValueObject.r / 255,\n          g: currentValueObject.g / 255,\n          b: currentValueObject.b / 255\n        };\n        const targetColorRatio = {\n          r: targetValueObject.r / 255,\n          g: targetValueObject.g / 255,\n          b: targetValueObject.b / 255\n        };\n        const addingColor = {\n          r: 0xff0000 * ((targetColorRatio.r - currentColorRatio.r) * curvedRatio),\n          g: 0x00ff00 * ((targetColorRatio.g - currentColorRatio.g) * curvedRatio),\n          b: 0x0000ff * ((targetColorRatio.b - currentColorRatio.b) * curvedRatio)\n        };\n\n        convertInfo.add({\n          target: params.target,\n          key: 'tint',\n          value:\n            (currentColorRatio.r / 0xff0000) + (addingColor.r - addingColor.r % 0x010000) +\n            (currentColorRatio.g / 0x00ff00) + (addingColor.g - addingColor.g % 0x000100) +\n            (currentColorRatio.b / 0x0000ff) + addingColor.b\n        });\n      }\n    } else {\n      const keys = Object.getOwnPropertyNames(currentValueObject);\n      for (let j = 0; j < keys.length; j++) {\n        const key = keys[j];\n\n        const valueDistance = targetValueObject[key] - currentValueObject[key];\n        const value = currentValueObject[key] + valueDistance * params.curveFunc(params.timeRatio);\n\n        convertInfo.add({\n          target: (params.target as any)[params.animationProperty],\n          key: key,\n          value: value\n        });\n      }\n    }\n\n    return convertInfo;\n  }\n\n  private static getAnimationPropertyConversionInfoSet(params: Types.FrameParams): Set<Types.PropertyConversionInfo> {\n    if (typeof params.currentValue === 'number') {\n      const convertInfoSet = new Set<Types.PropertyConversionInfo>();\n      const info = CocosAnimationRuntimeExtension.getPrimitiveAnimationPropertyConversionInfo(params as Types.PrimitiveFrameParams);\n      convertInfoSet.add(info);\n      return convertInfoSet;\n    }\n\n    return CocosAnimationRuntimeExtension.getObjectAnimationPropertyConversionInfoSet(params as Types.ObjectFrameParams);\n  }\n};\n","import Types from './interface/types';\n\n/**\n * Collection of easing functions.\n */\nconst Easing: { [name: string]: Types.EaseFunction; } = {\n  linear: (ratio: number): number => {\n    return ratio;\n  },\n  quadOut: (ratio: number): number => {\n    return ratio * (2 - ratio);\n  }\n}\n\nexport default Easing;\n","const tau = 2 * Math.PI;\n\nfunction crt(v: number) {\n  return (v < 0) ? -Math.pow(-v, 1 / 3) : Math.pow(v, 1 / 3);\n}\n\nfunction cardano(curve: number[], ratio: number) {\n  const pa = ratio;\n  const pb = ratio - curve[0];\n  const pc = ratio - curve[2];\n  const pd = ratio - 1;\n\n  // to [t^3 + at^2 + bt + c] form:\n  const pa3 = pa * 3;\n  const pb3 = pb * 3;\n  const pc3 = pc * 3;\n  const d = (-pa + pb3 - pc3 + pd);\n  const rd = 1 / d;\n  const r3 = 1 / 3;\n  const a = (pa3 - 6 * pb + pc3) * rd;\n  const a3 = a * r3;\n  const b = (-pa3 + pb3) * rd;\n  const c = pa * rd;\n  // then, determine p and q:\n  const p = (3 * b - a * a) * r3;\n  const p3 = p * r3;\n  const q = (2 * a * a * a - 9 * a * b + 27 * c) / 27;\n  const q2 = q / 2;\n  // and determine the discriminant:\n  const discriminant = q2 * q2 + p3 * p3 * p3;\n\n  // If the discriminant is negative, use polar coordinates\n  // to get around square roots of negative numbers\n  if (discriminant < 0) {\n    const mp3 = -p * r3;\n    const mp33 = mp3 * mp3 * mp3;\n    const r = Math.sqrt(mp33);\n    // compute cosphi corrected for IEEE float rounding:\n    const t = -q / (2 * r);\n    const cosphi = t < -1 ? -1 : t > 1 ? 1 : t;\n    const phi = Math.acos(cosphi);\n    const crtr = crt(r);\n    const t1 = 2 * crtr;\n    const x1 = t1 * Math.cos(phi * r3) - a3;\n    const x2 = t1 * Math.cos((phi + tau) * r3) - a3;\n    const x3 = t1 * Math.cos((phi + 2 * tau) * r3) - a3;\n\n    // choose best percentage\n    if (0 <= x1 && x1 <= 1) {\n      if (0 <= x2 && x2 <= 1) {\n        return (0 <= x3 && x3 <= 1) ? Math.max(x1, x2, x3) : Math.max(x1, x2);\n      } else {\n        return (0 <= x3 && x3 <= 1) ? Math.max(x1, x3) : x1;\n      }\n    } else {\n      if (0 <= x2 && x2 <= 1) {\n        return (0 <= x3 && x3 <= 1) ? Math.max(x2, x3) : x2;\n      } else {\n        return x3;\n      }\n    }\n  } else if (discriminant === 0) {\n    const u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n    const x1 = 2 * u1 - a3;\n    const x2 = -u1 - a3;\n\n    // choose best percentage\n    if (0 <= x1 && x1 <= 1) {\n      return (0 <= x2 && x2 <= 1) ? Math.max(x1, x2) : x1;\n    } else {\n      return x2;\n    }\n  } else {\n    // one real root, and two imaginary roots\n    const sd = Math.sqrt(discriminant);\n    return crt(-q2 + sd) - crt(q2 + sd) - a3;\n  }\n}\n\nexport default function bezierByTime(controlPoints: number[], ratio: number) {\n  const percent = cardano(controlPoints, ratio);    // t\n  // var p0y = 0;                // a\n  // const p1y = controlPoints[1]; // b\n  // const p2y = controlPoints[3]; // c\n  // var p3y = 1;                // d\n  const t1  = 1 - percent;\n  return /* 0 * t1 * t1 * t1 + */ controlPoints[1] * 3 * percent * t1      * t1 +\n         controlPoints[3] * 3 * percent * percent * t1 +\n         /* 1 * */ percent * percent * percent;\n}\n","import CocosAnimationRuntime from './CocosAnimationRuntime';\nimport CocosAnimationRuntimeTypes from './interface/types';\n\nexport default CocosAnimationRuntime;\nexport { CocosAnimationRuntimeTypes };\n"],"sourceRoot":""}