{"version":3,"sources":["webpack://scene-graph-mediator-rt/webpack/universalModuleDefinition","webpack://scene-graph-mediator-rt/webpack/bootstrap","webpack://scene-graph-mediator-rt/./src/exporter/Exporter.ts","webpack://scene-graph-mediator-rt/./src/exporter/Pixi.ts","webpack://scene-graph-mediator-rt/./src/exporter/index.ts","webpack://scene-graph-mediator-rt/./src/importer/Importer.ts","webpack://scene-graph-mediator-rt/./src/importer/Pixi.ts","webpack://scene-graph-mediator-rt/./src/importer/component/Layout.ts","webpack://scene-graph-mediator-rt/./src/importer/index.ts","webpack://scene-graph-mediator-rt/./src/index.ts","webpack://scene-graph-mediator-rt/./src/property_converter/Pixi.ts"],"names":[],"mappings":"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","file":"scene-graph-mediator-rt.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scene-graph-mediator-rt\"] = factory();\n\telse\n\t\troot[\"scene-graph-mediator-rt\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { SchemaJson, Node } from '@drecom/scene-graph-schema';\n\n/**\n * Abstract class for runtime mediation.<br />\n * It handles runtime object like Unity's GameObject or Cocos's Node\n */\nexport default abstract class Exporter {\n  /**\n   * Export current runtime node structure to desired format\n   * like text tree or raw intermediates.<br />\n   * FIXME: Child node(s) added in constructor may duplicate.\n   */\n  public export(rootNode: any, width: number, height: number): SchemaJson {\n    return this.createSchema(rootNode, width, height);\n  }\n\n  /**\n   * Create Schema from base node.\n   */\n  abstract createSchema(base: any, width: number, height: number): SchemaJson;\n  /**\n   * Create Schema from base node.\n   */\n  abstract createNode(base: any): Node;\n}\n","import { SchemaJson, Node } from '@drecom/scene-graph-schema';\nimport Exporter from 'exporter/Exporter';\n\n/**\n * Abstract class for runtime mediation.<br />\n * It handles runtime object like Unity's GameObject or Cocos's Node\n */\nexport default class Pixi extends Exporter {\n\n  public createSchema(scene: any, width: number, height: number): SchemaJson {\n    const root: SchemaJson = {\n      scene: this.createNodeRecursive(scene),\n      metadata: {\n        width,\n        height,\n        positiveCoord: {\n          xRight: true,\n          yDown:  true\n        }\n      }\n    };\n\n    return root;\n  }\n\n  public createNode(base: any): Node {\n    const className = base.constructor.name;\n\n    const node: Node = {\n      id: base.name,\n      name: base.name,\n      constructorName: className,\n      transform: {\n        x: base.position.x,\n        y: base.position.y,\n        anchor: {\n          x: 0,\n          y: 0\n        }\n      }\n    };\n\n    if (base.parent) {\n      node.transform.parent = base.parent.name;\n    }\n\n    if (base.children) {\n      node.transform.children = [];\n      for (let i = 0; i < base.children.length; i++) {\n        node.transform.children.push(base.children[i].name);\n      }\n    }\n\n    switch (className) {\n      case 'NineSlicePlane': break; // TODO:\n      case 'Spine': break; // TODO:\n      case 'Sprite': {\n        // TODO: base64 image\n        node.sprite =  {\n          url : base.texture.baseTexture.imageUrl\n        };\n        // TODO: texture atlas\n        break;\n      }\n      case 'Text': {\n        node.text = {\n          text: base.text,\n          style: {\n            size: base.style.fontSize,\n            color: base.style.fill\n          }\n        };\n        break;\n      }\n    }\n\n    // extras\n    node.properties = {};\n\n    // for..in iterator crawls all properties includes prototype\n    const keys = Object.keys(base);\n    for (let i = 0; i < keys.length; i++) {\n      const key   = keys[i];\n      const value = base[key];\n\n      const valueType = typeof value;\n      // restrict to JSON types\n      if (valueType === 'string' || valueType === 'number' || valueType === 'boolean') {\n        node.properties[key] = value;\n      }\n    }\n\n    return node;\n  }\n\n  private createNodeRecursive(base: any): Node[] {\n    let nodes = [];\n    nodes.push(this.createNode(base));\n\n    if (base.children) {\n      for (let i = 0; i < base.children.length; i++) {\n        nodes = nodes.concat(this.createNodeRecursive(base.children[i]));\n      }\n    }\n\n    return nodes;\n  }\n}\n","import Exporter from 'exporter/Exporter';\nimport Pixi from 'exporter/Pixi';\n\nconst Exporters = {\n  Pixi,\n  Abstract: Exporter\n};\n\nexport { Exporters };\n","import { SchemaJson, Node } from '@drecom/scene-graph-schema';\nimport ImporterPlugin from '../interface/ImporterPlugin';\n\nexport type ImportOption = {\n  autoCoordinateFix: boolean\n};\n\n/**\n * Abstract class for runtime mediation.<br />\n * It handles runtime object like Unity's GameObject or Cocos's Node\n */\nexport abstract class Importer {\n\n  /**\n   * Callback called when any asset added to pixi loader\n   */\n  abstract setOnAddLoaderAsset(\n    callback: (node: Node, asset: { url: string, name: string }) => void\n  ): void;\n\n  /**\n   * Callback called when restoring a node to pixi container<br />\n   * If null is returned, default initiator creates pixi object.\n   */\n  abstract setOnRestoreNode(\n    callback: (node: Node, resources: any) => any | null | undefined\n  ): void;\n\n  /**\n   * Callback called when each pixi object is instantiated\n   */\n  abstract setOnRuntimeObjectCreated(\n    callback: (id: string, obj: any) => void\n  ): void;\n\n  abstract setOnTransformRestored(\n    callback: (\n      schema: SchemaJson,\n      id: string,\n      obj: any,\n      node: Node,\n      parentNode?: Node\n    ) => void\n  ): void;\n\n  /**\n   * Returns initiate methods related to class name.<br />\n   * Often it is used to define initiation of a class instance\n   * with constructor that has argument.<br />\n   * Initiators are defined in each runtime implementation and it should be augmented by user.<br />\n   * Remarks: This is an experimental design and may be changed in the future.\n   */\n  public getInitiator(_name: string): (node: Node) => any {\n    return () => {};\n  }\n  /**\n   * Returns initiator exists\n   */\n  public hasInitiator(_name: string): boolean {\n    return false;\n  }\n\n  /**\n   * Add plugin to extend import process.\n   */\n  abstract addPlugin(plugin: ImporterPlugin): void;\n\n  /**\n   * Import Schema and rebuild runtime node structure.\n   */\n  abstract import(schema: SchemaJson, callback: (root: any) => void): any;\n  abstract createAssetMap(schema: SchemaJson): Map<string, any>;\n  abstract restoreScene(root: any, schema: SchemaJson, option: ImportOption): void;\n  abstract pluginPostProcess(\n    schema: SchemaJson,\n    nodeMap: Map<string, Node>,\n    runtimeObjectMap: Map<string, any>,\n    option: ImportOption\n  ): void;\n}\n","import { SchemaJson, Node } from '@drecom/scene-graph-schema';\nimport { Importer, ImportOption } from 'importer/Importer';\nimport ImporterPlugin from '../interface/ImporterPlugin';\nimport { Pixi as PropertyConverter } from '../property_converter/Pixi';\nimport LayoutComponent from './component/Layout';\n\ntype NodeMap      = Map<string, Node>;\ntype ContainerMap = Map<string, PIXI.Container>;\n\nconst defaultImportOption: ImportOption = {\n  autoCoordinateFix: true\n};\n\ndeclare module 'pixi.js' {\n  interface Container {\n    sgmed?: {\n      anchor?: {\n        x: number,\n        y: number\n      }\n    };\n  }\n}\n\n/**\n * Pixi implementation of Importer\n */\nexport default class Pixi extends Importer {\n\n  /**\n   * Dtect if given colors are default color\n   */\n  private static isDefaultColor(r: number, g: number, b: number, a?: number): boolean {\n    return (r === 255 && g === 255 && b === 255 && (!a || a === 255));\n  }\n\n  /**\n   * Callback called when any asset added to pixi loader\n   */\n  public setOnAddLoaderAsset(\n    callback: (node: Node, asset: { url: string, name: string }) => void = (_n, _a) => {}\n  ): void {\n    this.onAddLoaderAsset = callback;\n  }\n\n  /**\n   * Callback called when restoring a node to pixi container<br />\n   * If null is returned, default initiator creates pixi object.\n   */\n  public setOnRestoreNode(\n    callback: (node: Node, resources: any) => any | null | undefined = (_n, _r) => { return null; }\n  ): void {\n    this.onRestoreNode = callback;\n  }\n\n  /**\n   * Callback called when each pixi object is instantiated\n   */\n  public setOnRuntimeObjectCreated(\n    callback: (id: string, obj: any) => void = (_i, _o) => {}\n  ): void {\n    this.onPixiObjectCreated = callback;\n  }\n\n  public setOnTransformRestored(\n    callback: (\n      schema: SchemaJson,\n      id: string,\n      obj: any,\n      node: Node,\n      parentNode?: Node\n    ) => void = (_s, _i, _o, _n, _p) => {}\n  ): void {\n    this.onTransformRestored = callback;\n  }\n\n  private onAddLoaderAsset: (node: Node, asset: { url: string, name: string }) => void\n    = (_node: Node, _asset: { url: string, name: string }) => {}\n  private onRestoreNode: (node: Node, resources: any) => any | null | undefined\n    = (_n, _r) => { return null; }\n  private onPixiObjectCreated: (id: string, obj: any) => void\n    = (_i, _o) => {}\n  private onTransformRestored: (\n    schema: SchemaJson,\n    id: string,\n    obj: any,\n    node: Node,\n    parentNode?: Node\n  ) => void = (_s, _i, _o, _n, _p) => {}\n\n  private plugins: ImporterPlugin[] = [];\n\n  /**\n   * Returns atlas resource name with node id\n   */\n  public getAtlasResourceNameByNodeId(id: string): string { return `${id}_atlas`; }\n\n  /**\n   * Returns pixi class as initializer\n   */\n  public getInitiator(name: string): (node: Node) => any {\n    return (_node) => { return new (PIXI as any)[name](); };\n  }\n\n  /**\n   * Returns if pixi has property with given name\n   */\n  public hasInitiator(name: string): boolean {\n    return PIXI.hasOwnProperty(name);\n  }\n\n  /**\n   * Add plugin to extend import process.\n   */\n  public addPlugin(plugin: ImporterPlugin): void {\n    this.plugins.push(plugin);\n  }\n\n  /**\n   * Import Schema and rebuild runtime node structure.<br />\n   * Resources are automatically downloaded.<br />\n   * Use createAssetMap if any customized workflow are preffered.\n   */\n  public import(\n    schema: SchemaJson,\n    param1?: (root: any) => void | ImportOption,\n    param2?: ImportOption\n  ): any {\n    let callback: (root: any) => void;\n    let option: ImportOption;\n\n    if (param2) {\n      callback = param1 as any;\n      option   = param2;\n    } else {\n      if (param1) {\n        if (param1.constructor.name === 'Function') {\n          callback = param1;\n          option   = defaultImportOption;\n        } else {\n          callback = (_) => {};\n          option   = param1 as any;\n        }\n      } else {\n        callback = (_) => {};\n        option   = defaultImportOption;\n      }\n    }\n\n    const root = new PIXI.Container();\n\n    // create asset list to download\n    const assets: Map<string, { url: string, name: string }> = this.createAssetMap(schema);\n\n    // load if any asset is required\n    if (assets.size > 0) {\n      assets.forEach((asset) => { PIXI.loader.add(asset); });\n\n      PIXI.loader.load(() => {\n        this.restoreScene(root, schema, option);\n        callback(root);\n      });\n    } else {\n      this.restoreScene(root, schema, option);\n      callback(root);\n    }\n\n    return root;\n  }\n\n  /**\n   * Create asset map from schema.<br />\n   * Users can use this method and restoreScene individually to inject custom pipeline.\n   */\n  public createAssetMap(schema: SchemaJson): Map<string, { url: string, name: string }> {\n    // resources\n    const assets = new Map<string, { url: string, name: string }>();\n\n    // collect required resource\n    for (let i = 0; i < schema.scene.length; i++) {\n      let url;\n\n      const node = schema.scene[i];\n      if (node.spine) {\n        // TODO: support spine\n        // url  = node.spine.url;\n        continue;\n      } else if (node.sprite) {\n        url = node.sprite.url;\n      } else {\n        continue;\n      }\n\n      if (!url) {\n        continue;\n      }\n\n      const asset = { url, name: url };\n\n      // user custom process to modify url or resource name\n      this.onAddLoaderAsset(node, asset);\n\n      assets.set(url, asset);\n    }\n\n    return assets;\n  }\n\n  /**\n   * Rstore pixi container to given root container from schema\n   */\n  public restoreScene(\n    root: PIXI.Container,\n    schema: SchemaJson,\n    option: ImportOption = defaultImportOption\n  ): void {\n    // map all nodes in schema first\n    const nodeMap = this.createNodeMap(schema);\n    // then instantiate all containers from node map\n    const containerMap = this.createContainerMap(nodeMap, PIXI.loader.resources);\n    // restore renderer\n    this.restoreRenderer(nodeMap, containerMap);\n    // restore transform in the end\n    this.restoreTransform(root, schema, nodeMap, containerMap, option);\n  }\n\n  /**\n   * Extend scene graph with user plugins.\n   */\n  public pluginPostProcess(\n    schema: SchemaJson,\n    nodeMap: Map<string, Node>,\n    runtimeObjectMap: Map<string, any>,\n    option: ImportOption\n  ): void {\n    for (let i = 0; i < this.plugins.length; i++) {\n      const plugin = this.plugins[i];\n      plugin.extendRuntimeObjects(schema, nodeMap, runtimeObjectMap, option);\n    }\n  }\n\n  /**\n   * Map all nodes from given schema\n   */\n  private createNodeMap(schema: SchemaJson): NodeMap {\n    const nodeMap = new Map<string, Node>();\n    for (let i = 0; i < schema.scene.length; i++) {\n      const node = schema.scene[i];\n      nodeMap.set(node.id, node);\n    }\n    return nodeMap;\n  }\n\n  /**\n   * Create and map all Containers from given nodeMap\n   */\n  private createContainerMap(nodeMap: NodeMap, resources: any): ContainerMap {\n    const containerMap = new Map<string, PIXI.Container>();\n\n    nodeMap.forEach((node, id) => {\n      // give prior to user custome initialization\n      let object = this.onRestoreNode(node, resources);\n\n      // then process default initialization\n      if (!object) {\n        object = this.createContainer(node, resources);\n      }\n\n      // skip if not supported\n      if (!object) {\n        return;\n      }\n\n      // name with node name if no name given\n      if (!object.name) {\n        object.name = node.name;\n      }\n\n      this.onPixiObjectCreated(id, object);\n\n      containerMap.set(id, object);\n    });\n\n    return containerMap;\n  }\n\n  /**\n   * Create container instance from given node<br />\n   * Textures in loader.resources may be refered.\n   */\n  private createContainer(node: Node, resources: any): any {\n    let object: any;\n\n    if (node.spine) {\n      // TODO: support spine\n      // object = new PIXI.spine.Spine(resources[node.id].data);\n    } else if (node.sprite) {\n      let texture = null;\n      if (node.sprite.atlasUrl && node.sprite.frameName) {\n        texture = PIXI.Texture.fromFrame(node.sprite.frameName);\n      } else if (node.sprite.url) {\n        texture = resources[node.sprite.url].texture;\n      } else if (node.sprite.base64) {\n        texture = PIXI.Texture.fromImage(node.sprite.base64);\n      }\n\n      if (!texture) {\n        return null;\n      }\n\n      if (node.sprite.slice) {\n        object = new PIXI.mesh.NineSlicePlane(\n          texture,\n          node.sprite.slice.left,\n          node.sprite.slice.top,\n          node.sprite.slice.right,\n          node.sprite.slice.bottom\n        );\n        object.width  = node.transform.width;\n        object.height = node.transform.height;\n      } else {\n        object = new PIXI.Sprite(texture);\n      }\n    } else if (node.text) {\n      const style = new PIXI.TextStyle({});\n      if (node.text.style) {\n        style.fontSize  = node.text.style.size || 26;\n        style.fill      = node.text.style.color || 'black';\n        switch (node.text.style.horizontalAlign) {\n          case 2 : style.align = 'right'; break;\n          case 1 : style.align = 'center'; break;\n          case 0 :\n          default: style.align = 'left'; break;\n        }\n      }\n      object = new PIXI.Text(node.text.text || '', style);\n    } else if (this.hasInitiator(node.constructorName)) {\n      object = this.getInitiator(node.constructorName)(node);\n    } else {\n      object = new PIXI.Container();\n    }\n\n    return object;\n  }\n\n  /**\n   * Restore transform<br />\n   * Process this method after applying textures\n   * since bounds can not be calculated properly if no texture are applied.\n   */\n  private restoreTransform(\n    root: PIXI.Container,\n    schema: SchemaJson,\n    nodeMap: NodeMap,\n    containerMap: ContainerMap,\n    option: ImportOption = defaultImportOption\n  ): void {\n    // restore transform for each mapped container\n    // TODO: should separate restoration of hieralchy and property ?\n    containerMap.forEach((container, id) => {\n      // node that is not from schema\n      const node = nodeMap.get(id);\n      if (!node) {\n        return;\n      }\n\n      const transform  = node.transform;\n      const parentNode = transform.parent ? nodeMap.get(transform.parent) : undefined;\n\n      // restore hieralchy\n      if (transform.parent === undefined) {\n        // container that has no parent is the root element\n        root.addChild(container);\n      } else {\n        const parentContainer = containerMap.get(transform.parent);\n        // skip if any parent could not be detected\n        if (!parentContainer || !parentNode) {\n          return;\n        }\n\n        parentContainer.addChild(container);\n      }\n\n      if (!container.sgmed) {\n        container.sgmed = {};\n      }\n\n      container.sgmed.anchor = {\n        x: node.transform.anchor.x,\n        y: node.transform.anchor.y\n      };\n\n      if (option.autoCoordinateFix) {\n        // scene-graph-mediator extended properties\n        this.fixCoordinate(schema, container, node, parentNode);\n      } else {\n        this.applyCoordinate(schema, container, node);\n      }\n    });\n\n    // update under Layout component node\n    containerMap.forEach((container, id) => {\n      const node = nodeMap.get(id);\n      if (!node || !node.layout) {\n        return;\n      }\n\n      LayoutComponent.fixLayout(container, node);\n    });\n\n    this.pluginPostProcess(schema, nodeMap, containerMap, option);\n\n    containerMap.forEach((container, id) => {\n      const node = nodeMap.get(id);\n      if (!node) {\n        return;\n      }\n\n      const parentNode = node.transform.parent ? nodeMap.get(node.transform.parent) : undefined;\n\n      this.onTransformRestored(schema, id, container, node, parentNode);\n    });\n  }\n\n  public fixCoordinate(schema: SchemaJson, obj: any, node: Node, parentNode?: Node): void {\n    const convertedValues = PropertyConverter.createConvertedObject(schema, node.transform);\n    PropertyConverter.fixCoordinate(obj, convertedValues, node, parentNode);\n    PropertyConverter.applyConvertedObject(obj, convertedValues);\n  }\n  public applyCoordinate(schema: SchemaJson, obj: any, node: Node): void {\n    const convertedValues = PropertyConverter.createConvertedObject(schema, node.transform);\n    PropertyConverter.applyConvertedObject(obj, convertedValues);\n  }\n\n  private restoreRenderer(nodeMap: NodeMap, containerMap: ContainerMap): void {\n    containerMap.forEach((container, id) => {\n      // node that is not from schema\n      const node = nodeMap.get(id);\n      if (!node) {\n        return;\n      }\n\n      if (!node.renderer) {\n        return;\n      }\n\n      if (node.renderer.color) {\n        const color = node.renderer.color;\n        if (!Pixi.isDefaultColor(color.r, color.g, color.b)) {\n          // TODO: consider Sprite tint\n          const filter = new PIXI.filters.ColorMatrixFilter();\n          filter.matrix = [\n            color.r / 255, 0, 0, 0, 0,\n            0, color.g / 255, 0, 0, 0,\n            0, 0, color.b / 255, 0, 0,\n            0, 0, 0, color.a / 255, 0\n          ];\n\n          // getter for filters returns copy\n          const filters = container.filters || [];\n          filters.push(filter);\n          container.filters = filters;\n        } else if (color.a !== 255) {\n          container.alpha = color.a / 255;\n        }\n      }\n    });\n  }\n}\n","import { Container } from 'pixi.js';\nimport { Layout, Node } from '@drecom/scene-graph-schema';\n\nenum LayoutType {\n  NONE = 0,\n  HORIZONTAL = 1,\n  VERTICAL = 2,\n  GRID = 3\n}\n\nenum AxisDirection {\n  HORIZONTAL = 0,\n  VERTICAL = 1\n}\n\nenum VerticalDirection {\n  BOTTOM_TO_TOP = 0,\n  TOP_TO_BOTTOM = 1\n}\n\nenum HorizontalDirection {\n  LEFT_TO_RIGHT = 0,\n  RIGHT_TO_LEFT = 1\n}\n\n// resize not supported.\n// enum ResizeMode {\n//   NONE = 0,\n//   CONTAINER = 1,\n//   CHILDREN = 2\n// }\n\nexport default class LayoutComponent {\n  public static fixLayout(container: Container, node: Node): void {\n    if (!node || !node.layout) {\n      return;\n    }\n\n    switch (node.layout.layoutType) {\n      case LayoutType.HORIZONTAL: {\n        this.fixHorizontal(container, node);\n        break;\n      }\n      case LayoutType.VERTICAL: {\n        this.fixVertical(container, node);\n        break;\n      }\n      case LayoutType.GRID: {\n        this.fixGrid(container, node);\n        return;\n      }\n\n      default:\n        return;\n    }\n  }\n\n  private static fixHorizontal(container: Container, node: Node): void {\n    if (!node || !node.layout) {\n      return;\n    }\n\n    const baseWidth:number = node.transform.width || 0;\n    if (baseWidth <= 0) {\n      return;\n    }\n\n    const layout:Layout = node.layout;\n    let offsetX:number = this.calcLayoutBasePointX(layout, baseWidth);\n\n    container.children.forEach((child) => {\n      const childContainer = child as Container;\n      if (!childContainer || !childContainer.sgmed) {\n        return;\n      }\n\n      const childWidth = childContainer.width * child.scale.x;\n      const ancherX = childContainer.sgmed.anchor ? childContainer.sgmed.anchor.x : 0;\n      child.position.x = this.calcPositionX(layout, ancherX, childWidth, offsetX);\n      offsetX = this.calcOffsetX(layout, childWidth, offsetX);\n    });\n  }\n\n  private static fixVertical(container: Container, node: Node): void {\n    if (!node || !node.layout) {\n      return;\n    }\n\n    const baseHeight:number = node.transform.height || 0;\n    if (baseHeight <= 0) {\n      return;\n    }\n\n    const layout:Layout = node.layout;\n    let offsetY:number = this.calcLayoutBasePointY(layout, baseHeight);\n\n    container.children.forEach((child) => {\n      const childContainer = child as Container;\n      if (!childContainer || !childContainer.sgmed) {\n        return;\n      }\n\n      const childHeight = childContainer.height * child.scale.y;\n      const ancherY = childContainer.sgmed.anchor ? childContainer.sgmed.anchor.y : 0;\n      child.position.y = this.calcPositionY(layout, ancherY, childHeight, offsetY);\n      offsetY = this.calcOffsetY(layout, childHeight, offsetY);\n    });\n  }\n\n  private static fixGrid(container: Container, node: Node): void {\n    if (!node || !node.layout) {\n      return;\n    }\n\n    const baseWidth:number = node.transform.width || 0;\n    const baseHeight:number = node.transform.height || 0;\n    if (baseWidth <= 0 || baseHeight <= 0) {\n      return;\n    }\n\n    const layout:Layout = node.layout;\n    const basePointX: number = this.calcLayoutBasePointX(layout, baseWidth);\n    const basePointY: number = this.calcLayoutBasePointY(layout, baseHeight);\n    const horizontalPadding: number = (layout.paddingLeft || 0) + (layout.paddingRight || 0);\n    const verticalPadding: number = (layout.paddingBottom || 0) + (layout.paddingTop || 0);\n\n    let offsetX:number = basePointX;\n    let offsetY:number = basePointY;\n    container.children.forEach((child) => {\n      const childContainer = child as Container;\n      if (!childContainer || !childContainer.sgmed) {\n        return;\n      }\n\n      const childWidth = Math.abs(childContainer.width * child.scale.x);\n      const childHeight = Math.abs(childContainer.height * child.scale.y);\n      let maxSize: number = 0;\n\n      if (layout.startAxis === AxisDirection.HORIZONTAL) {\n        maxSize = Math.max(maxSize, childHeight, 0);\n        const rowSize = Math.abs(offsetX - basePointX) + childWidth + horizontalPadding;\n        if (baseWidth <= rowSize) {\n          // wrap\n          if (layout.verticalDirection === VerticalDirection.BOTTOM_TO_TOP) {\n            offsetY -= maxSize + (layout.spacingY || 0);\n          } else {\n            offsetY += maxSize + (layout.spacingY || 0);\n          }\n          offsetX = basePointX;\n          maxSize = 0;\n        }\n\n        const ancherX = childContainer.sgmed.anchor ? childContainer.sgmed.anchor.x : 0;\n        const ancherY = childContainer.sgmed.anchor ? childContainer.sgmed.anchor.y : 0;\n        child.position.x = this.calcPositionX(layout, ancherX, childWidth, offsetX);\n        child.position.y = this.calcPositionY(layout, ancherY, childHeight, offsetY);\n        offsetX = this.calcOffsetX(layout, childWidth, offsetX);\n\n      } else {\n        maxSize = Math.max(maxSize, childWidth, 0);\n        const columnSize = Math.abs(offsetY - basePointY) + childHeight + verticalPadding;\n        if (baseHeight <= columnSize) {\n          // wrap\n          if (layout.horizontalDirection === HorizontalDirection.LEFT_TO_RIGHT) {\n            offsetX += maxSize + (layout.spacingX || 0);\n          } else {\n            offsetX -= maxSize + (layout.spacingX || 0);\n          }\n          offsetY = basePointY;\n          maxSize = 0;\n        }\n\n        const ancherX = childContainer.sgmed.anchor ? childContainer.sgmed.anchor.x : 0;\n        const ancherY = childContainer.sgmed.anchor ? childContainer.sgmed.anchor.y : 0;\n        child.position.x = this.calcPositionX(layout, ancherX, childWidth, offsetX);\n        child.position.y = this.calcPositionY(layout, ancherY, childHeight, offsetY);\n        offsetY = this.calcOffsetY(layout, childHeight, offsetY);\n      }\n    });\n  }\n\n  private static calcLayoutBasePointX(layout:Layout, baseWidth:number): number {\n    if (layout.horizontalDirection === HorizontalDirection.LEFT_TO_RIGHT) {\n      return layout.paddingLeft || 0;\n    }\n    return baseWidth + (layout.paddingRight || 0);\n  }\n\n  private static calcLayoutBasePointY(layout:Layout, baseHeight:number): number {\n    if (layout.verticalDirection === VerticalDirection.BOTTOM_TO_TOP) {\n      return baseHeight + (layout.paddingBottom || 0);\n    }\n    return layout.paddingTop || 0;\n  }\n\n  private static calcPositionX(layout:Layout, anchorX:number, width:number, offsetX:number) {\n    if (layout.horizontalDirection === HorizontalDirection.LEFT_TO_RIGHT) {\n      return offsetX + anchorX * width;\n    }\n    return offsetX - (1 - anchorX) * width;\n\n  }\n\n  private static calcPositionY(\n    layout:Layout,\n    anchorY:number,\n    height:number,\n    offsetY:number\n  ):number {\n    if (layout.verticalDirection === VerticalDirection.BOTTOM_TO_TOP) {\n      return offsetY - (1 - anchorY) * height;\n    }\n    return offsetY + anchorY * height;\n  }\n\n  private static calcOffsetX(layout:Layout, width:number, currentOffsetX:number):number {\n    if (layout.horizontalDirection === HorizontalDirection.LEFT_TO_RIGHT) {\n      return currentOffsetX + width + (layout.spacingX || 0);\n    }\n    return currentOffsetX - (width + (layout.spacingX || 0));\n  }\n\n  private static calcOffsetY(layout:Layout, height:number, currentOffsetY:number):number {\n    if (layout.verticalDirection === VerticalDirection.BOTTOM_TO_TOP) {\n      return currentOffsetY - (height + (layout.spacingY || 0));\n    }\n    return currentOffsetY + height + (layout.spacingY || 0);\n  }\n}\n","import { Importer, ImportOption } from 'importer/Importer';\nimport Pixi from 'importer/Pixi';\n\nconst Importers = {\n  Pixi,\n  Abstract: Importer\n};\n\nexport { Importers, ImportOption };\n","import { Importers, ImportOption } from 'importer';\nimport ImporterPlugin from 'interface/ImporterPlugin';\nimport { Exporters } from 'exporter';\nimport { Pixi as PixiPropertyConverter } from 'property_converter/Pixi';\n\nexport {\n  Importers,\n  ImportOption,\n  ImporterPlugin,\n  Exporters,\n  PixiPropertyConverter\n};\n","import { SchemaJson, Node, Transform } from '@drecom/scene-graph-schema';\nimport PropertyConverter from '../interface/PropertyConverter';\n\nconst DEGREE_TO_RADIAN = Math.PI / 180;\n\nexport type ConvertedObject = {\n  position: { x: number, y: number },\n  scale:    { x: number, y: number },\n  anchor:   { x: number, y: number },\n  rotation: number\n};\n\nexport const Pixi: PropertyConverter.Interface = {\n  createConvertedObject: (schema: SchemaJson, transform: Transform): ConvertedObject => {\n    const coordVector = {\n      x: (schema.metadata.positiveCoord.xRight ? 1 : -1),\n      y: (schema.metadata.positiveCoord.yDown  ? 1 : -1)\n    };\n\n    return {\n      // convert coordinate system\n      position: {\n        x: transform.x * coordVector.x,\n        y: transform.y * coordVector.y\n      },\n\n      // default scale is 1/1\n      scale: (transform.scale) ? {\n        x: transform.scale.x,\n        y: transform.scale.y\n      } : { x: 1, y: 1 },\n\n      // scene-graph-mediator extended properties\n      anchor: {\n        // TODO: magic\n        x: (coordVector.x === 1) ? transform.anchor.x : 0.5 - (transform.anchor.x - 0.5),\n        y: (coordVector.y === 1) ? transform.anchor.y : 0.5 - (transform.anchor.y - 0.5)\n      },\n\n      // pixi rotation is presented in radian\n      rotation: (transform.rotation) ? transform.rotation * DEGREE_TO_RADIAN : 0\n    };\n  },\n\n  fixCoordinate: (\n    target: any,\n    convertedObject: ConvertedObject,\n    node: Node,\n    parentNode?: Node\n  ): void => {\n    const transform = node.transform;\n\n    if (parentNode) {\n      const scale = transform.scale || { x: 1, y: 1 };\n\n      convertedObject.position.x += (\n        (parentNode.transform.width  || 0) - (transform.width  || 0) * scale.x\n      ) * transform.anchor.x;\n      convertedObject.position.y += (\n        (parentNode.transform.height || 0) - (transform.height || 0) * scale.y\n      ) * transform.anchor.y;\n    }\n\n    if (target.anchor) {\n      const size = {\n        width: target.width,\n        height: target.height\n      };\n\n      // should calcurate with original size\n      // TODO: text exclusion may be Cocos specific feature\n      if (target.texture && !node.text) {\n        size.width  = target.texture.width;\n        size.height = target.texture.height;\n      }\n\n      if (transform.width !== undefined && transform.height !== undefined) {\n        size.width  = transform.width;\n        size.height = transform.height;\n      }\n\n      convertedObject.position.x += size.width  * convertedObject.scale.x * transform.anchor.x;\n      convertedObject.position.y += size.height * convertedObject.scale.y * transform.anchor.y;\n    }\n  },\n\n  applyConvertedObject: (target: any, convertedObject: ConvertedObject): void => {\n    target.position.x = convertedObject.position.x;\n    target.position.y = convertedObject.position.y;\n    target.scale.x    = convertedObject.scale.x;\n    target.scale.y    = convertedObject.scale.y;\n    target.rotation   = convertedObject.rotation;\n\n    if (target.anchor) {\n      target.anchor.x = convertedObject.anchor.x;\n      target.anchor.y = convertedObject.anchor.y;\n    }\n  }\n};\n"],"sourceRoot":""}